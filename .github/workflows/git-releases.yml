name: Create Release

on: 
  push:
    tags:
      - 'v*'      

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./XmlCodeGenerator/CHANGELOG.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{env.BUILD_CONFIGURATION}} ${{ github.ref }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          draft: false
          prerelease: false
          
  build:
    runs-on: windows-latest
    needs: create_release
    
    steps:
    - uses: actions/checkout@v2
    - name: Decrypt snk
      run: gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.SNKFILE_DEC_KEY }}" --output ../SeongTaeJeong.snk ./SeongTaeJeong.snk.gpg

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
       
    - name: Publish extension to Marketplace
      uses: cezarypiatek/VsixPublisherAction@0.2
      with:
        extension-file: ./XmlCodeGenerator/bin/${{env.BUILD_CONFIGURATION}}/XmlCodeGenerator.vsix
        publish-manifest-file: ./XmlCodeGenerator/publishManifest.json
        personal-access-code: ${{ secrets.VSGALLERY_API_KEY }}        
      
    - name: Publish NuGet
      id: pub_nuget
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        PROJECT_FILE_PATH: ./XmlSrcGenerator/XmlSrcGenerator.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}} 
        TAG_COMMIT: false
        INCLUDE_SYMBOLS: true
      
    - name: Upload VSIX Release Asset
      id: upload-vsix-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./XmlCodeGenerator/bin/${{env.BUILD_CONFIGURATION}}/XmlCodeGenerator.vsix
        asset_name: XmlCodeGenerator.vsix
        asset_content_type: application/octet-stream

    - name: Upload Nuget Release Asset
      id: upload-nuget-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ${{ steps.pub_nuget.outputs.PACKAGE_PATH }}
        asset_name: ${{ steps.pub_nuget.outputs.PACKAGE_NAME }}
        asset_content_type: application/octet-stream
